using UnityEngine;

public class GatherableAnimal : MonoBehaviour
{
    // 1. üêÆ ‡∏™‡∏£‡πâ‡∏≤‡∏á Enum ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå
    public enum AnimalType
    {
        Chicken, // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÑ‡∏Å‡πà
        Pig,     // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏°‡∏π
        Cow      // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ß‡∏±‡∏ß
    }

    [Header("Animal Setup")]
    // üö© ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÉ‡∏ô Inspector
    public AnimalType type = AnimalType.Chicken; 

    // üö© ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡∏ï‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡∏π‡∏Å‡πÉ‡∏ô Inspector ‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô)
    public string uniqueID; 
    
    [Header("Respawn")]
    // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏ï‡∏±‡∏ß
    public int initialSpawnOffsetDay = 0; 
    
    // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ ItemID ‡πÅ‡∏•‡∏∞ RespawnDays ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å AnimalType
    private string itemID;
    private int minRespawnDays;
    
    // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡πÑ‡∏î‡πâ
    private int itemAmount = 1; 

    private void Awake()
    {
        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î ItemID ‡πÅ‡∏•‡∏∞ RespawnDays ‡∏ï‡∏≤‡∏°‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô Inspector
        SetAnimalStats(type);
    }

    private void Start()
    {
        // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°/‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
        CheckRespawnStateOnLoad();
    }
    
    // üéØ ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå
    private void SetAnimalStats(AnimalType animalType)
    {
        switch (animalType)
        {
            case AnimalType.Chicken:
                itemID = "Chicken"; // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÑ‡∏Å‡πà
                minRespawnDays = 2;     // ‡πÑ‡∏Å‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î (‡πÄ‡∏ä‡πà‡∏ô 2 ‡∏ß‡∏±‡∏ô)
                itemAmount = 1;
                break;
            case AnimalType.Pig:
                itemID = "Pig";    // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏°‡∏π
                minRespawnDays = 4;     // ‡∏´‡∏°‡∏π‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á (‡πÄ‡∏ä‡πà‡∏ô 4 ‡∏ß‡∏±‡∏ô)
                itemAmount = 1;
                break;
            case AnimalType.Cow:
                itemID = "Cow";    // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ß‡∏±‡∏ß
                minRespawnDays = 7;     // ‡∏ß‡∏±‡∏ß‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ä‡πâ‡∏≤‡∏™‡∏∏‡∏î (‡πÄ‡∏ä‡πà‡∏ô 7 ‡∏ß‡∏±‡∏ô)
                itemAmount = 1;
                break;
        }
    }

    // üéØ ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö/‡∏Ü‡πà‡∏≤/‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß
    public void Gather()
    {
        // 1. ‡∏°‡∏≠‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ ItemController
        if (ItemController.instance != null)
        {
            ItemController.instance.AddItem(itemID, itemAmount);
            Debug.Log($"Collected {itemAmount} of {itemID} from animal {uniqueID}.");
            ItemController.instance.UpdateInventoryUI();
        }
        
        // 2. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏ß‡∏™
        if (QuestManager.Instance != null)
        {
            // QuestManager ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏î‡πâ‡∏ß‡∏¢ itemID ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            QuestManager.Instance.UpdateQuestProgress(itemID); 
        }

        // 3. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏á‡πÉ‡∏ô ObjectSaveManager
        if (ObjectSaveManager.instance != null)
        {
            // ‡πÉ‡∏ä‡πâ AddMushroomCollectedDay ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß
            ObjectSaveManager.instance.AddMushroomCollectedDay(uniqueID); 
        }

        // 4. ‡∏ã‡πà‡∏≠‡∏ô/‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏™‡∏±‡∏ï‡∏ß‡πå
        gameObject.SetActive(false);
    }
    
    // üéØ Logic ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ô Start())
    private void CheckRespawnStateOnLoad()
    {
        if (ObjectSaveManager.instance != null && TimeController.instance != null)
        {
            int currentDay = TimeController.instance.currentDay;

            if (currentDay < initialSpawnOffsetDay)
            {
                gameObject.SetActive(false);
                return;
            }

            // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ minRespawnDays ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤)
            // üí° ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏ò‡∏≠‡∏î ShouldRespawn ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ minRespawnDays
            if (ObjectSaveManager.instance.ShouldRespawn(uniqueID, minRespawnDays)) 
            {
                gameObject.SetActive(true);
                Debug.Log($"Animal {uniqueID} ({type}) has RESPAWNED RANDOMLY on Day {currentDay}.");
            }
            else
            {
                gameObject.SetActive(false);
            }
        }
    }
}