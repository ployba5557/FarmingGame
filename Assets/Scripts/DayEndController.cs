using UnityEngine;
using TMPro;
using UnityEngine.InputSystem;
using UnityEngine.SceneManagement;
using System.Linq; 
using System.Collections.Generic; // üö© ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö FindObjectsByType

public class DayEndController : MonoBehaviour
{
    public TMP_Text dayText;
    public string wakeUpScene;
    
    // Start is called once before the first execution of Update after the MonoBehaviour is created
    void Start()
    {
        if(TimeController.instance != null)
        {
            // 1. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡∏±‡∏ô
            dayText.text = "- Day " + TimeController.instance.currentDay + " -";
        }
        
        // 2. ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏´‡πá‡∏î‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏õ‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô
        //    (‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ DayEndController ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏â‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏î‡∏≠‡∏¢‡∏π‡πà)
        ProcessMissedMushrooms(); 

        AudioManager.Instance.PauseMusic();
        AudioManager.Instance.PlaySFX(1);
    }

    private void Update()
    {
        // ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏î‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
        if(Keyboard.current.anyKey.wasPressedThisFrame || Mouse.current.leftButton.wasPressedThisFrame)
        {
            // 1. ‡πÅ‡∏à‡πâ‡∏á TimeController ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ô
            TimeController.instance.StartDay();

            AudioManager.Instance.ResumeMusic();
            // 2. ‡πÇ‡∏´‡∏•‡∏î‡∏â‡∏≤‡∏Å‡∏ï‡∏∑‡πà‡∏ô‡∏ô‡∏≠‡∏ô/‡∏â‡∏≤‡∏Å‡∏´‡∏•‡∏±‡∏Å
            SceneManager.LoadScene(wakeUpScene);
        }
    }
    
    /// <summary>
    /// ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏´‡πá‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á Active ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏â‡∏≤‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ß‡∏±‡∏ô
    /// ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å "‡∏û‡∏•‡∏≤‡∏î" (Missed) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà Respawn Queue ‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
    /// </summary>
    private void ProcessMissedMushrooms()
    {
        // üö© ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÉ‡∏ä‡πâ FindObjectsByType ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà Unity ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö Warning CS0618
        GatherableMushroom[] allMushrooms = FindObjectsByType<GatherableMushroom>(FindObjectsSortMode.None);

        foreach (GatherableMushroom mushroom in allMushrooms)
        {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏´‡πá‡∏î‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Hierarchy (activeInHierarchy)
            if (mushroom != null && mushroom.gameObject.activeInHierarchy)
            {
                // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏´‡πá‡∏î‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏¢‡∏π‡πà ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô "‡∏û‡∏•‡∏≤‡∏î" ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏°‡∏±‡∏ô‡πÑ‡∏õ
                // MarkAsMissed() ‡∏à‡∏∞‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏´‡πá‡∏î‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏á‡πÉ‡∏ô ObjectSaveManager
                mushroom.MarkAsMissed();
            }
        }
        Debug.Log("Finished processing missed mushrooms for the day.");
    }
}