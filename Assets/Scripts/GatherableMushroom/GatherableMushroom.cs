using UnityEngine;

public class GatherableMushroom : MonoBehaviour
{
    // üö© ‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡∏π‡∏Å ID ‡πÉ‡∏ô Inspector ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏´‡πá‡∏î‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡πâ‡∏ô
    public string uniqueID; 
    
    public string itemID = "Mushroom"; // ID ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÄ‡∏´‡πá‡∏î
    public int itemAmount = 1;
    public int initialSpawnOffsetDay = 1; 
    //public float respawnDelay = 10800f; // ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ (3 ‡∏ä‡∏°.)

    private void Start()
    {
        // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°/‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        CheckRespawnStateOnLoad();
    }

    public void Gather()
    {
        // 1. ‡∏°‡∏≠‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ ItemController
        if (ItemController.instance != null)
        {
            ItemController.instance.AddItem(itemID, itemAmount);
            Debug.Log($"Collected {itemAmount} of {itemID}.");
        }

        // 2. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏á‡πÉ‡∏ô ObjectSaveManager (‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)
        if (ObjectSaveManager.instance != null)
        {
            ObjectSaveManager.instance.AddMushroomCollectedDay(uniqueID);
        }

        // 3. ‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏´‡πá‡∏î
        gameObject.SetActive(false);
    }
    
    // üö© ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏î‡∏¢ DayEndController
    // ‡πÄ‡∏û‡∏∑‡πà‡∏≠ "‡πÄ‡∏Å‡πá‡∏ö" ‡πÄ‡∏´‡πá‡∏î‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏õ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
    public void MarkAsMissed()
    {
        // 1. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏á‡πÉ‡∏ô ObjectSaveManager
        if (ObjectSaveManager.instance != null)
        {
            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å "‡∏û‡∏•‡∏≤‡∏î" ‡πÑ‡∏õ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
            ObjectSaveManager.instance.AddMushroomCollectedDay(uniqueID);
            Debug.Log($"Mushroom {uniqueID} was MISSED and marked for randomized respawn.");
        }
        
        // 2. ‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏´‡πá‡∏î
        gameObject.SetActive(false); 
        
        // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ Inventory
    }

    private void CheckRespawnStateOnLoad()
    {
         if (ObjectSaveManager.instance != null && TimeController.instance != null)
        {
            int currentDay = TimeController.instance.currentDay;

             if (currentDay < initialSpawnOffsetDay)
            {
                gameObject.SetActive(false);
                return; // ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏ò‡∏≠‡∏î ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Respawn Logic
            }

            // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏´‡πá‡∏î‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡πÉ‡∏ä‡πâ logic ‡∏™‡∏∏‡πà‡∏°‡∏ß‡∏±‡∏ô)
            if (ObjectSaveManager.instance.ShouldMushroomRespawn(uniqueID))
            {
                // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà (TRUE) - Logic ‡∏™‡∏∏‡πà‡∏°‡∏ú‡πà‡∏≤‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏•‡∏¢
                gameObject.SetActive(true);
                Debug.Log($"Mushroom {uniqueID} has RESPWNED RANDOMLY on Day {currentDay}.");
            }
            else
            {
                // 5. ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà (FALSE) ‡πÉ‡∏´‡πâ‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ß‡πâ
                gameObject.SetActive(false);
            }
            }
        }
}
