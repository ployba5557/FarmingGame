using UnityEngine;
using UnityEngine.InputSystem;

public class NPCShopMushroom : MonoBehaviour
{
  [Header("Shop References")]
    public ShopControllerManagerMushroom shopManagerMushroom;
     public string[] dialogue; 
     public string npcName = "Mushroom Seller"; 
     public Sprite npcSprite; 
     private bool playerClose; // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

    // üö© ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡πÄ‡∏°‡∏ò‡∏≠‡∏î Start() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠ GameObject ‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î/‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î
    private void Start()
    {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô false ‡πÄ‡∏™‡∏°‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠ NPC ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô
        playerClose = false; 
        
        // üö© ‚úÖ ‡∏ú‡∏π‡∏Å‡πÄ‡∏°‡∏ò‡∏≠‡∏î ResetDailyStatus ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö TimeController (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö Event)
        // (‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° Logic ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô TimeController ‡πÄ‡∏≠‡∏á)
        // if (TimeController.instance != null)
        // {
        //     TimeController.instance.OnStartDay += ResetDailyStatus;
        // }
    }

    private void OnTriggerEnter2D(Collider2D other)
    {
        if (other.CompareTag("Player"))
        {
            playerClose = true;
        }
    }

    private void OnTriggerStay2D(Collider2D other)
    {
        if (other.CompareTag("Player"))
        {
            // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô true ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Trigger
            playerClose = true; 
        }
    }

    // ‚úÖ ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Trigger
     private void OnTriggerExit2D(Collider2D other)
     {
         if (other.CompareTag("Player"))
         {
             playerClose = false;
         }
     }

    void Update()
     {
         if (playerClose && Keyboard.current.eKey.wasPressedThisFrame)
         {
             DialogueManagerShop.instance.OnYesSelected -= OnYesSelected;
             DialogueManagerShop.instance.OnYesSelected += OnYesSelected;

             DialogueManagerShop.instance.StartDialogue(dialogue, npcName, npcSprite);
         }
     }

    private void OnYesSelected()
    {
        DialogueManagerShop.instance.OnYesSelected -= OnYesSelected;

        // üö© ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÉ‡∏ä‡πâ Singleton Instance ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡πÉ‡∏ô Inspector
        ShopControllerManagerMushroom manager = ShopControllerManagerMushroom.instance;

        if (manager != null && manager.theShopMushroomController != null)
        {
            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å OpenClose ‡∏ú‡πà‡∏≤‡∏ô Controller ‡∏´‡∏•‡∏±‡∏Å
            manager.theShopMushroomController.OpenClose();
        }
        else
        {
            // ‡πÅ‡∏™‡∏î‡∏á Error ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Manager ‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
            Debug.LogError("ShopControllerManagerMushroom.instance is NULL. Check if the Manager GameObject is in the scene and its Awake() runs correctly.");
        }
    }
         
    
    
    // üö© ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà (‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö Event ‡πÉ‡∏ô TimeController)
    public void ResetDailyStatus()
{
    playerClose = false;
    // üö© ‡∏´‡∏≤‡∏Å‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Console ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà Day 2 ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ Event ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    Debug.Log($"NPC {npcName}: Status reset. playerClose is now {playerClose} on Day {TimeController.instance.currentDay}."); 
}
}