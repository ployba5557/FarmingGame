// // ‡πÑ‡∏ü‡∏•‡πå: TreeRespawnManager.cs
// using UnityEngine;

// public class TreeRespawnManager : MonoBehaviour
// {
//     public GameObject choppableTreePrefab; 
//     public Transform[] respawnPoints;
//     public float respawnDelay = 7200f; // 2 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
//     // üö© ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏∏‡∏î‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà '‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤' 
//     // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏ß‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ CheckRespawnStateOnLoad ‡πÉ‡∏ô ChoppableTree.cs ‡πÅ‡∏ó‡∏ô

//     void Update()
//     {
//         // ... (‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
//         foreach (Transform point in respawnPoints)
//         {
//             if (point == null)
//             {
//                 continue; 
//             }
            
//             string uniqueID = point.position.ToString();

//             // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
//             if (ObjectSaveManager.instance != null && ObjectSaveManager.instance.ShouldRespawn(uniqueID, respawnDelay))
//             {
//                 // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà
//                 GameObject newTree = Instantiate(choppableTreePrefab, point.position, Quaternion.identity);
//                 ChoppableTree treeScript = newTree.GetComponent<ChoppableTree>();
//                 if (treeScript != null)
//                 {
//                     treeScript.uniqueID = uniqueID; 
//                 }
                
//                 Debug.Log($"Tree at {uniqueID} has respawned.");
//             }
//         }
//     }
// }